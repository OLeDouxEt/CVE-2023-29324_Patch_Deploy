<#.SYNOPSIS
This script is intended to be deployed from a RMM console to run across
multiple machines to check if the patch for CVE-2023-29324 has been installed for Windows machines.
This will check all relevant patches for Windows 10 64bit builds 1607, 1809, 1903, 20H2, 21H2, 22H2.
Windows 11 64 bit build 21H2 and 22H2 will also be checked and patched.
#>

$currDir = Get-Location
$logFile = "CVE-patchLog.txt"

$patchArr = @(
    "KB5026363", # WIN 10 1607
    "KB5026362", # Win 10 1809
    "KB5026361", # WIN 10 1903, 20H2, 21H2, 22H2
    "KB5026368", # WIN 11 21H2
    "KB5026372"  # WIN 11 22H2
)

$patchURIs = @{
    Win1607 = 'https://catalog.s.download.windowsupdate.com/c/msdownload/update/software/secu/2023/05/windows10.0-kb5026363-x64_8fc1ee2832426d09b9b6088873afc82420609730.msu';
    Win1809 = 'https://catalog.s.download.windowsupdate.com/c/msdownload/update/software/secu/2023/05/windows10.0-kb5026362-x64_6984e22fb6e5980f59d8731da8b38415146acb50.msu';
    Win10_19_22H2 = 'https://catalog.s.download.windowsupdate.com/c/msdownload/update/software/secu/2023/05/windows10.0-kb5026361-x64_961f439d6b20735f067af766e1813936bf76cb94.msu';
    Win11_21H2 = 'https://catalog.s.download.windowsupdate.com/d/msdownload/update/software/secu/2023/05/windows10.0-kb5026368-x64_a5523f98635d9c2b93f2f2144e5bacab7ff7d838.msu';
    Win11_22H2 = 'https://catalog.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/20a05b31-ee84-41b9-94b2-bc02f95cf9ee/public/windows11.0-kb5026372-x64_d2e542ce70571b093d815adb9013ed467a3e0a85.msu'
}


Function Compare-Patches(){
    param(
        [System.Object]$array
    )
    $patched = $false
    $patchID = ""
    $instPacs = get-wmiobject -class win32_quickfixengineering
    for($i=0;$i -lt $instPacs.Length;$i++){
        $tempPac = $instPacs[$i].HotFixID
        for($j=0;$j -lt $array.length;$j++){
            if($tempPac -eq $array[$j]){
                $patched = $true
                $patchID = $array[$j]
                break
            }
        }
    }
    $info = @($patched, $patchID)
    return $info
}

Function Get-OS_Patch {
    param(
        [string]$KB
    )
    $osInfo = Get-WmiObject Win32_OperatingSystem
    #$osVer = $osInfo.Caption
    switch($osInfo.Version){
        # For Windows 10 Build 1607
        "10.0.14393"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win1607"] -OutFile "$($patchArr[0]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win1607" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 10 Build 1809
        "10.0.17763"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win1809"] -OutFile "$($patchArr[1]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win1809" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 10 Build 1903
        "10.0.18362"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win10_19_22H2"] -OutFile "$($patchArr[2]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win10_19_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 10 20H2
        "10.0.19042"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win10_19_22H2"] -OutFile "$($patchArr[2]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win10_19_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 10 21H2
        "10.0.19044"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win10_19_22H2"] -OutFile "$($patchArr[2]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win10_19_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 10 22H2
        "10.0.19045"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win10_19_22H2"] -OutFile "$($patchArr[2]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win10_19_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 11 21H2
        "10.0.22000"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win11_21H2"] -OutFile "$($patchArr[3]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win11_21H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        # For Windows 11 22H2
        "10.0.22621"{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win11_21H2"] -OutFile "$($patchArr[4]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win11_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
        Default{
            Write-Output "Downloading patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Invoke-WebRequest -Uri $patchURIs["Win11_22H2"] -OutFile "$($patchArr[2]).msu"
            Write-Output "Preparing patch for build $($osInfo.Version)..." | Out-File -FilePath "$currDir\$logFile"
            Start-Process -FilePath "$currDir\$win10_19_22H2" -ArgumentList "/quiet", "/norestart"
            Write-Output "Patch $KB has been installed for $($osInfo.Version)." | Out-File -FilePath "$currDir\$logFile"
        }
    }
}

$IsPatched = Compare-Patches -array $patchArr
if($IsPatched[0]){
    Write-Host "Patch: $($IsPatched[1]) is installed for CVE-2023-29324."
}else{
    Write-Host "No patch installed for CVE-2023-29324."
    Write-Host "Preparing to attempt patch install. Install info will be logged in CVE-patchLog.txt"
    try{
        Get-OS_Patch -KB $IsPatched[1]
    }catch{
        Write-Warning "Unable to install patch! Need to manually attempt install."
    }
}